"""init

Revision ID: 1c4616872dd4
Revises: 
Create Date: 2025-02-14 18:11:22.145862

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1c4616872dd4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accounts",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("username", sa.VARCHAR(length=64), nullable=False),
        sa.Column("balance_whole", sa.BigInteger(), nullable=False),
        sa.Column("balance_fraction", sa.BigInteger(), nullable=False),
        sa.CheckConstraint(
            "balance_whole >= 0 AND balance_fraction >= 0 AND balance_fraction < 100",
            name=op.f("accounts_check_balance_valid_check"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("accounts_pkey")),
        sa.UniqueConstraint("user_id", name=op.f("accounts_user_id_key")),
        sa.UniqueConstraint("username", name=op.f("accounts_username_key")),
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("from_account_id", sa.UUID(), nullable=True),
        sa.Column("to_account_id", sa.UUID(), nullable=True),
        sa.Column("from_username", sa.VARCHAR(), nullable=True),
        sa.Column("to_username", sa.VARCHAR(), nullable=True),
        sa.Column("amount_whole", sa.BigInteger(), nullable=False),
        sa.Column("amount_fraction", sa.BigInteger(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("TRANSFER", "PAYMENT", "REPLENISHMENT", name="transaction_type"),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum("COMPLETED", "ROLLBACKED", name="transaction_status"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "amount_fraction >= 0 AND amount_fraction < 100",
            name=op.f("transactions_check_transaction_fraction_check"),
        ),
        sa.ForeignKeyConstraint(
            ["from_account_id"],
            ["accounts.id"],
            name=op.f("transactions_from_account_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["to_account_id"],
            ["accounts.id"],
            name=op.f("transactions_to_account_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("transactions_pkey")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transactions")
    op.drop_table("accounts")
    # ### end Alembic commands ###
    op.execute("DROP TYPE transaction_status;")
    op.execute("DROP TYPE transaction_type;")
